filesystem (ext4, hfs+, ntfs, etc)
    implemented by the kernel at hand

block device (nbd, iSCSI, ATAoE, etc)
    nbd allows linux access and is easy to code

remapper
    maps a set of virtual fixed size zeroed block devices onto a
    single one-ended data store.

    try: use a block map list at the start of the datastore. when a
         larger mapping space is required, remap the blocks nearest to
         the block map list until there's enough space.
    try: use medium block sizes (~32KiB)

distributor
    maps a one-ended data store into a set of files or disks

    handles disk failures (total and byte-wise)

    try: map lazily, in large (>=256MiB) chunks
    try: keep mapping data on all disks
    try: allow parameterization of the RS codes to be independent of
         the disks by allocating horizontal arrays of RS-joined chunks
         on appropriate disks, rather than all disks at the same time.
    try: use a crc-32 for finding read failures
    try: xor the stored crc-32 with the crc of the zero block to
         reduce initialization times

    want: configurationless restarts by storing the configuration on
          all storage drives
    want: atomic writes. maybe this isn't needed if we're careful
          about flushing.
    want: automatic rebalancing.
    want: background hash verification to actively remove bad bits

